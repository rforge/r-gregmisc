
R version 3.2.0 (2015-04-16) -- "Full of Ingredients"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.4.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(gdata)
gdata: read.xls support for 'XLS' (Excel 97-2004) files ENABLED.

gdata: Unable to load perl libaries needed by read.xls()
gdata: to support 'XLSX' (Excel 2007+) files.

gdata: Run the function 'installXLSXsupport()'
gdata: to automatically download and install the perl
gdata: libaries needed to support Excel XLS and XLSX formats.

Attaching package: 'gdata'

The following object is masked from 'package:stats':

    nobs

The following object is masked from 'package:utils':

    object.size

> 
> options(humanReadable=FALSE)
> 
> baseSI <- 10
> powerSI <- seq(from=0, to=27, by=3)
> SI0 <- (baseSI)^powerSI
> k <- length(SI0) - 1
> SI1 <- SI0 - SI0 / c(2, runif(n=k, min=1.01, max=5.99))
> SI2 <- SI0 + SI0 / c(2, runif(n=k, min=1.01, max=5.99))
> 
> baseIEC <- 2
> powerIEC <- seq(from=0, to=90, by=10)
> IEC0 <- (baseIEC)^powerIEC
> IEC1 <- IEC0 - IEC0 / c(2, runif(n=k, min=1.01, max=5.99))
> IEC2 <- IEC0 + IEC0 / c(2, runif(n=k, min=1.01, max=5.99))
> 
> # Auto units, specify width
> cbind(humanReadable(x=SI2,  standard="SI",   width=7),
+       humanReadable(x=SI2,  standard="SI",   width=5),
+       humanReadable(x=SI2,  standard="SI",   width=3),
+       humanReadable(x=IEC2, standard="IEC",  width=7),
+       humanReadable(x=IEC2, standard="IEC",  width=5),
+       humanReadable(x=IEC2, standard="IEC",  width=3),
+       humanReadable(x=IEC2, standard="Unix", width=7),
+       humanReadable(x=IEC2, standard="Unix", width=5),
+       humanReadable(x=IEC2, standard="Unix", width=3))
      [,1]         [,2]       [,3]      [,4]          [,5]        [,6]      
 [1,] "      2 B " "    2 B " "   2 B " "      2 B  " "    2 B  " "   2 B  "
 [2,] "1.19855 kB" "1.199 kB" " 1.2 kB" "1.23404 KiB" "1.234 KiB" " 1.2 KiB"
 [3,] "1.20686 MB" "1.207 MB" " 1.2 MB" "1.24529 MiB" "1.245 MiB" " 1.2 MiB"
 [4,] "1.24218 GB" "1.242 GB" " 1.2 GB" "1.19621 GiB" "1.196 GiB" " 1.2 GiB"
 [5,] "1.20157 TB" "1.202 TB" " 1.2 TB" "1.21737 TiB" "1.217 TiB" " 1.2 TiB"
 [6,] "1.26255 PB" "1.263 PB" " 1.3 PB" "1.57268 PiB" "1.573 PiB" " 1.6 PiB"
 [7,] "1.35911 EB" "1.359 EB" " 1.4 EB" "1.18177 EiB" "1.182 EiB" " 1.2 EiB"
 [8,] " 1.2033 ZB" "1.203 ZB" " 1.2 ZB" "1.49049 ZiB" " 1.49 ZiB" " 1.5 ZiB"
 [9,] "1.35332 YB" "1.353 YB" " 1.4 YB" "1.84401 YiB" "1.844 YiB" " 1.8 YiB"
[10,] " 1723.7 YB" " 1724 YB" "1724 YB" "1216.27 YiB" " 1216 YiB" "1216 YiB"
      [,7]        [,8]      [,9]    
 [1,] "      2 B" "    2 B" "   2 B"
 [2,] "1.23404 K" "1.234 K" " 1.2 K"
 [3,] "1.24529 M" "1.245 M" " 1.2 M"
 [4,] "1.19621 G" "1.196 G" " 1.2 G"
 [5,] "1.21737 T" "1.217 T" " 1.2 T"
 [6,] "1.57268 P" "1.573 P" " 1.6 P"
 [7,] "1.18177 E" "1.182 E" " 1.2 E"
 [8,] "1.49049 Z" " 1.49 Z" " 1.5 Z"
 [9,] "1.84401 Y" "1.844 Y" " 1.8 Y"
[10,] "1216.27 Y" " 1216 Y" "1216 Y"
> 
> # Auto units, specify digits
> cbind(humanReadable(x=SI2,  standard="SI",   width=NULL, digits=7),
+       humanReadable(x=SI2,  standard="SI",   width=NULL, digits=3),
+       humanReadable(x=SI2,  standard="SI",   width=NULL, digits=2),
+       humanReadable(x=SI2,  standard="SI",   width=NULL, digits=1),
+       humanReadable(x=IEC2, standard="IEC",  width=NULL, digits=7),
+       humanReadable(x=IEC2, standard="IEC",  width=NULL, digits=3),
+       humanReadable(x=IEC2, standard="IEC",  width=NULL, digits=2),
+       humanReadable(x=IEC2, standard="IEC",  width=NULL, digits=1),
+       humanReadable(x=IEC2, standard="Unix", width=NULL, digits=7),
+       humanReadable(x=IEC2, standard="Unix", width=NULL, digits=3),
+       humanReadable(x=IEC2, standard="Unix", width=NULL, digits=2),
+       humanReadable(x=IEC2, standard="Unix", width=NULL, digits=1))
      [,1]              [,2]          [,3]         [,4]       
 [1,] "   1.5000000 B " "   1.500 B " "   1.50 B " "   1.5 B "
 [2,] "   1.1985486 kB" "   1.199 kB" "   1.20 kB" "   1.2 kB"
 [3,] "   1.2068563 MB" "   1.207 MB" "   1.21 MB" "   1.2 MB"
 [4,] "   1.2421751 GB" "   1.242 GB" "   1.24 GB" "   1.2 GB"
 [5,] "   1.2015680 TB" "   1.202 TB" "   1.20 TB" "   1.2 TB"
 [6,] "   1.2625549 PB" "   1.263 PB" "   1.26 PB" "   1.3 PB"
 [7,] "   1.3591145 EB" "   1.359 EB" "   1.36 EB" "   1.4 EB"
 [8,] "   1.2033002 ZB" "   1.203 ZB" "   1.20 ZB" "   1.2 ZB"
 [9,] "   1.3533151 YB" "   1.353 YB" "   1.35 YB" "   1.4 YB"
[10,] "1723.7026620 YB" "1723.703 YB" "1723.70 YB" "1723.7 YB"
      [,5]               [,6]           [,7]          [,8]        
 [1,] "   1.5000000 B  " "   1.500 B  " "   1.50 B  " "   1.5 B  "
 [2,] "   1.2340441 KiB" "   1.234 KiB" "   1.23 KiB" "   1.2 KiB"
 [3,] "   1.2452876 MiB" "   1.245 MiB" "   1.25 MiB" "   1.2 MiB"
 [4,] "   1.1962114 GiB" "   1.196 GiB" "   1.20 GiB" "   1.2 GiB"
 [5,] "   1.2173697 TiB" "   1.217 TiB" "   1.22 TiB" "   1.2 TiB"
 [6,] "   1.5726781 PiB" "   1.573 PiB" "   1.57 PiB" "   1.6 PiB"
 [7,] "   1.1817693 EiB" "   1.182 EiB" "   1.18 EiB" "   1.2 EiB"
 [8,] "   1.4904906 ZiB" "   1.490 ZiB" "   1.49 ZiB" "   1.5 ZiB"
 [9,] "   1.8440055 YiB" "   1.844 YiB" "   1.84 YiB" "   1.8 YiB"
[10,] "1216.2741325 YiB" "1216.274 YiB" "1216.27 YiB" "1216.3 YiB"
      [,9]             [,10]        [,11]       [,12]     
 [1,] "   1.5000000 B" "   1.500 B" "   1.50 B" "   1.5 B"
 [2,] "   1.2340441 K" "   1.234 K" "   1.23 K" "   1.2 K"
 [3,] "   1.2452876 M" "   1.245 M" "   1.25 M" "   1.2 M"
 [4,] "   1.1962114 G" "   1.196 G" "   1.20 G" "   1.2 G"
 [5,] "   1.2173697 T" "   1.217 T" "   1.22 T" "   1.2 T"
 [6,] "   1.5726781 P" "   1.573 P" "   1.57 P" "   1.6 P"
 [7,] "   1.1817693 E" "   1.182 E" "   1.18 E" "   1.2 E"
 [8,] "   1.4904906 Z" "   1.490 Z" "   1.49 Z" "   1.5 Z"
 [9,] "   1.8440055 Y" "   1.844 Y" "   1.84 Y" "   1.8 Y"
[10,] "1216.2741325 Y" "1216.274 Y" "1216.27 Y" "1216.3 Y"
> 
> # Single unit, specify width
> cbind(humanReadable(x=SI1,  units="GB",  standard="SI",   width=7),
+       humanReadable(x=SI1,  units="GB",  standard="SI",   width=5),
+       humanReadable(x=SI1,  units="GB",  standard="SI",   width=3),
+       humanReadable(x=IEC1, units="GiB", standard="IEC",  width=7),
+       humanReadable(x=IEC1, units="GiB", standard="IEC",  width=5),
+       humanReadable(x=IEC1, units="GiB", standard="IEC",  width=3),
+       humanReadable(x=IEC1, units="G",   standard="Unix", width=7),
+       humanReadable(x=IEC1, units="G",   standard="Unix", width=5),
+       humanReadable(x=IEC1, units="G",   standard="Unix", width=3)
+       )
      [,1]       [,2]       [,3]       [,4]        [,5]        [,6]       
 [1,] "5e-10 GB" "5e-10 GB" "5e-10 GB" "5e-10 GiB" "5e-10 GiB" "5e-10 GiB"
 [2,] "8e-07 GB" "8e-07 GB" "8e-07 GB" "7e-07 GiB" "7e-07 GiB" "7e-07 GiB"
 [3,] "8e-04 GB" "8e-04 GB" "8e-04 GB" "8e-04 GiB" "8e-04 GiB" "8e-04 GiB"
 [4,] "8e-01 GB" "8e-01 GB" "8e-01 GB" "8e-01 GiB" "8e-01 GiB" "8e-01 GiB"
 [5,] "8e+02 GB" "8e+02 GB" "8e+02 GB" "6e+02 GiB" "6e+02 GiB" "6e+02 GiB"
 [6,] "8e+05 GB" "8e+05 GB" "8e+05 GB" "6e+05 GiB" "6e+05 GiB" "6e+05 GiB"
 [7,] "8e+08 GB" "8e+08 GB" "8e+08 GB" "8e+08 GiB" "8e+08 GiB" "8e+08 GiB"
 [8,] "8e+11 GB" "8e+11 GB" "8e+11 GB" "9e+11 GiB" "9e+11 GiB" "9e+11 GiB"
 [9,] "8e+14 GB" "8e+14 GB" "8e+14 GB" "4e+14 GiB" "4e+14 GiB" "4e+14 GiB"
[10,] "7e+17 GB" "7e+17 GB" "7e+17 GB" "8e+17 GiB" "8e+17 GiB" "8e+17 GiB"
      [,7]      [,8]      [,9]     
 [1,] "5e-10 G" "5e-10 G" "5e-10 G"
 [2,] "7e-07 G" "7e-07 G" "7e-07 G"
 [3,] "8e-04 G" "8e-04 G" "8e-04 G"
 [4,] "8e-01 G" "8e-01 G" "8e-01 G"
 [5,] "6e+02 G" "6e+02 G" "6e+02 G"
 [6,] "6e+05 G" "6e+05 G" "6e+05 G"
 [7,] "8e+08 G" "8e+08 G" "8e+08 G"
 [8,] "9e+11 G" "9e+11 G" "9e+11 G"
 [9,] "4e+14 G" "4e+14 G" "4e+14 G"
[10,] "8e+17 G" "8e+17 G" "8e+17 G"
> 
> # Single unit, specify digits
> cbind(humanReadable(x=SI1, units="GB", standard="SI", width=NULL, digits=7),
+       humanReadable(x=SI1, units="GB", standard="SI", width=NULL, digits=3),
+       humanReadable(x=SI1, units="GB", standard="SI", width=NULL, digits=2),
+       humanReadable(x=SI1, units="GB", standard="SI", width=NULL, digits=1),
+       humanReadable(x=IEC1, units="GiB", standard="IEC", width=NULL, digits=7),
+       humanReadable(x=IEC1, units="GiB", standard="IEC", width=NULL, digits=3),
+       humanReadable(x=IEC1, units="GiB", standard="IEC", width=NULL, digits=2),
+       humanReadable(x=IEC1, units="GiB", standard="IEC", width=NULL, digits=1),
+       humanReadable(x=IEC1, units="G", standard="Unix", width=NULL, digits=7),
+       humanReadable(x=IEC1, units="G", standard="Unix", width=NULL, digits=3),
+       humanReadable(x=IEC1, units="G", standard="Unix", width=NULL, digits=2),
+       humanReadable(x=IEC1, units="G", standard="Unix", width=NULL, digits=1)
+       )
      [,1]              [,2]          [,3]         [,4]      
 [1,] "5.000000e-10 GB" "5.00e-10 GB" "5.0e-10 GB" "5e-10 GB"
 [2,] "7.792994e-07 GB" "7.79e-07 GB" "7.8e-07 GB" "8e-07 GB"
 [3,] "7.796269e-04 GB" "7.80e-04 GB" "7.8e-04 GB" "8e-04 GB"
 [4,] "8.033561e-01 GB" "8.03e-01 GB" "8.0e-01 GB" "8e-01 GB"
 [5,] "8.314840e+02 GB" "8.31e+02 GB" "8.3e+02 GB" "8e+02 GB"
 [6,] "8.018065e+05 GB" "8.02e+05 GB" "8.0e+05 GB" "8e+05 GB"
 [7,] "8.032533e+08 GB" "8.03e+08 GB" "8.0e+08 GB" "8e+08 GB"
 [8,] "7.736007e+11 GB" "7.74e+11 GB" "7.7e+11 GB" "8e+11 GB"
 [9,] "8.033881e+14 GB" "8.03e+14 GB" "8.0e+14 GB" "8e+14 GB"
[10,] "6.856332e+17 GB" "6.86e+17 GB" "6.9e+17 GB" "7e+17 GB"
      [,5]               [,6]           [,7]          [,8]       
 [1,] "4.656613e-10 GiB" "4.66e-10 GiB" "4.7e-10 GiB" "5e-10 GiB"
 [2,] "7.138398e-07 GiB" "7.14e-07 GiB" "7.1e-07 GiB" "7e-07 GiB"
 [3,] "7.600841e-04 GiB" "7.60e-04 GiB" "7.6e-04 GiB" "8e-04 GiB"
 [4,] "8.231780e-01 GiB" "8.23e-01 GiB" "8.2e-01 GiB" "8e-01 GiB"
 [5,] "5.678312e+02 GiB" "5.68e+02 GiB" "5.7e+02 GiB" "6e+02 GiB"
 [6,] "5.506880e+05 GiB" "5.51e+05 GiB" "5.5e+05 GiB" "6e+05 GiB"
 [7,] "8.221636e+08 GiB" "8.22e+08 GiB" "8.2e+08 GiB" "8e+08 GiB"
 [8,] "8.721612e+11 GiB" "8.72e+11 GiB" "8.7e+11 GiB" "9e+11 GiB"
 [9,] "4.356026e+14 GiB" "4.36e+14 GiB" "4.4e+14 GiB" "4e+14 GiB"
[10,] "8.080586e+17 GiB" "8.08e+17 GiB" "8.1e+17 GiB" "8e+17 GiB"
      [,9]             [,10]        [,11]       [,12]    
 [1,] "4.656613e-10 G" "4.66e-10 G" "4.7e-10 G" "5e-10 G"
 [2,] "7.138398e-07 G" "7.14e-07 G" "7.1e-07 G" "7e-07 G"
 [3,] "7.600841e-04 G" "7.60e-04 G" "7.6e-04 G" "8e-04 G"
 [4,] "8.231780e-01 G" "8.23e-01 G" "8.2e-01 G" "8e-01 G"
 [5,] "5.678312e+02 G" "5.68e+02 G" "5.7e+02 G" "6e+02 G"
 [6,] "5.506880e+05 G" "5.51e+05 G" "5.5e+05 G" "6e+05 G"
 [7,] "8.221636e+08 G" "8.22e+08 G" "8.2e+08 G" "8e+08 G"
 [8,] "8.721612e+11 G" "8.72e+11 G" "8.7e+11 G" "9e+11 G"
 [9,] "4.356026e+14 G" "4.36e+14 G" "4.4e+14 G" "4e+14 G"
[10,] "8.080586e+17 G" "8.08e+17 G" "8.1e+17 G" "8e+17 G"
> 
> 
> stopifnot( is.object_sizes(as.object_sizes( 2^(1:30) ) ) )
> stopifnot( format(as.object_sizes(124)) == "124 bytes")
> stopifnot( format(as.object_sizes(124e8), units="auto") == "11.5 GiB")
> stopifnot( format(as.object_sizes(124e8), humanReadable=TRUE) == "11.5 GiB")
> stopifnot( format(as.object_sizes(124e8), units="bytes") == "1.24e+10 bytes")
> 
> tools::assertError( as.object_sizes(-1) )
> tools::assertError( as.object_sizes('a') )
> tools::assertError( as.object_sizes(list()) )
> tools::assertError( as.object_sizes(NULL) )
> tools::assertError( as.object_sizes(0+1i) )
> 
> stopifnot( format(as.object_sizes(1e40)               ) == "1e+40 bytes"     )
> stopifnot( format(as.object_sizes(1e40), units="auto" ) == "8.271806e+15 YiB")
> stopifnot( format(as.object_sizes(1e40), units="bytes") == "1e+40 bytes"     )
> stopifnot( format(as.object_sizes(1e40), humanReadable=TRUE) == "8.271806e+15 YiB")
> stopifnot( format(as.object_sizes(1e40), humanReadable=FALSE) ==  "1e+40 bytes")
> 
> options(humanReadable=TRUE)
> stopifnot( format(as.object_sizes(1e40) ) == "8.271806e+15 YiB")
> options(humanReadable=FALSE)
> 
> proc.time()
   user  system elapsed 
  0.368   0.047   0.415 
