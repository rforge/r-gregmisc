
R version 3.2.0 (2015-04-16) -- "Full of Ingredients"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.4.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(gdata)
gdata: read.xls support for 'XLS' (Excel 97-2004) files ENABLED.

gdata: read.xls support for 'XLSX' (Excel 2007+) files ENABLED.

Attaching package: 'gdata'

The following object is masked from 'package:stats':

    nobs

The following object is masked from 'package:utils':

    object.size

> 
> options(humanReadable=FALSE)
> 
> baseSI <- 10
> powerSI <- seq(from=0, to=27, by=3)
> SI0 <- (baseSI)^powerSI
> k <- length(SI0) - 1
> SI1 <- SI0 - SI0 / c(2, runif(n=k, min=1.01, max=5.99))
> SI2 <- SI0 + SI0 / c(2, runif(n=k, min=1.01, max=5.99))
> 
> baseIEC <- 2
> powerIEC <- seq(from=0, to=90, by=10)
> IEC0 <- (baseIEC)^powerIEC
> IEC1 <- IEC0 - IEC0 / c(2, runif(n=k, min=1.01, max=5.99))
> IEC2 <- IEC0 + IEC0 / c(2, runif(n=k, min=1.01, max=5.99))
> 
> # Auto units, specify width
> cbind(humanReadable(x=SI2,  standard="SI",   width=7),
+       humanReadable(x=SI2,  standard="SI",   width=5),
+       humanReadable(x=SI2,  standard="SI",   width=3),
+       humanReadable(x=IEC2, standard="IEC",  width=7),
+       humanReadable(x=IEC2, standard="IEC",  width=5),
+       humanReadable(x=IEC2, standard="IEC",  width=3),
+       humanReadable(x=IEC2, standard="Unix", width=7),
+       humanReadable(x=IEC2, standard="Unix", width=5),
+       humanReadable(x=IEC2, standard="Unix", width=3))
      [,1]         [,2]       [,3]      [,4]          [,5]        [,6]      
 [1,] "      2 B " "    2 B " "   2 B " "      2 B  " "    2 B  " "   2 B  "
 [2,] " 1.2793 kB" "1.279 kB" " 1.3 kB" " 1.2233 KiB" "1.223 KiB" " 1.2 KiB"
 [3,] "1.20319 MB" "1.203 MB" " 1.2 MB" "1.29885 MiB" "1.299 MiB" " 1.3 MiB"
 [4,] "1.16832 GB" "1.168 GB" " 1.2 GB" "1.22854 GiB" "1.229 GiB" " 1.2 GiB"
 [5,] "1.68539 TB" "1.685 TB" " 1.7 TB" "1.49459 TiB" "1.495 TiB" " 1.5 TiB"
 [6,] "1.20409 PB" "1.204 PB" " 1.2 PB" "1.30007 PiB" "  1.3 PiB" " 1.3 PiB"
 [7,] " 1.4313 EB" "1.431 EB" " 1.4 EB" " 1.3716 EiB" "1.372 EiB" " 1.4 EiB"
 [8,] "1.19649 ZB" "1.196 ZB" " 1.2 ZB" "1.26321 ZiB" "1.263 ZiB" " 1.3 ZiB"
 [9,] "1.17615 YB" "1.176 YB" " 1.2 YB" "1.30608 YiB" "1.306 YiB" " 1.3 YiB"
[10,] "1270.14 YB" " 1270 YB" "1270 YB" " 1373.7 YiB" " 1374 YiB" "1374 YiB"
      [,7]        [,8]      [,9]    
 [1,] "      2 B" "    2 B" "   2 B"
 [2,] " 1.2233 K" "1.223 K" " 1.2 K"
 [3,] "1.29885 M" "1.299 M" " 1.3 M"
 [4,] "1.22854 G" "1.229 G" " 1.2 G"
 [5,] "1.49459 T" "1.495 T" " 1.5 T"
 [6,] "1.30007 P" "  1.3 P" " 1.3 P"
 [7,] " 1.3716 E" "1.372 E" " 1.4 E"
 [8,] "1.26321 Z" "1.263 Z" " 1.3 Z"
 [9,] "1.30608 Y" "1.306 Y" " 1.3 Y"
[10,] " 1373.7 Y" " 1374 Y" "1374 Y"
> 
> # Auto units, specify digits
> cbind(humanReadable(x=SI2,  standard="SI",   width=NULL, digits=7),
+       humanReadable(x=SI2,  standard="SI",   width=NULL, digits=3),
+       humanReadable(x=SI2,  standard="SI",   width=NULL, digits=2),
+       humanReadable(x=SI2,  standard="SI",   width=NULL, digits=1),
+       humanReadable(x=IEC2, standard="IEC",  width=NULL, digits=7),
+       humanReadable(x=IEC2, standard="IEC",  width=NULL, digits=3),
+       humanReadable(x=IEC2, standard="IEC",  width=NULL, digits=2),
+       humanReadable(x=IEC2, standard="IEC",  width=NULL, digits=1),
+       humanReadable(x=IEC2, standard="Unix", width=NULL, digits=7),
+       humanReadable(x=IEC2, standard="Unix", width=NULL, digits=3),
+       humanReadable(x=IEC2, standard="Unix", width=NULL, digits=2),
+       humanReadable(x=IEC2, standard="Unix", width=NULL, digits=1))
      [,1]              [,2]          [,3]         [,4]       
 [1,] "   1.5000000 B " "   1.500 B " "   1.50 B " "   1.5 B "
 [2,] "   1.2793050 kB" "   1.279 kB" "   1.28 kB" "   1.3 kB"
 [3,] "   1.2031896 MB" "   1.203 MB" "   1.20 MB" "   1.2 MB"
 [4,] "   1.1683216 GB" "   1.168 GB" "   1.17 GB" "   1.2 GB"
 [5,] "   1.6853920 TB" "   1.685 TB" "   1.69 TB" "   1.7 TB"
 [6,] "   1.2040855 PB" "   1.204 PB" "   1.20 PB" "   1.2 PB"
 [7,] "   1.4313005 EB" "   1.431 EB" "   1.43 EB" "   1.4 EB"
 [8,] "   1.1964931 ZB" "   1.196 ZB" "   1.20 ZB" "   1.2 ZB"
 [9,] "   1.1761521 YB" "   1.176 YB" "   1.18 YB" "   1.2 YB"
[10,] "1270.1414519 YB" "1270.141 YB" "1270.14 YB" "1270.1 YB"
      [,5]               [,6]           [,7]          [,8]        
 [1,] "   1.5000000 B  " "   1.500 B  " "   1.50 B  " "   1.5 B  "
 [2,] "   1.2232984 KiB" "   1.223 KiB" "   1.22 KiB" "   1.2 KiB"
 [3,] "   1.2988465 MiB" "   1.299 MiB" "   1.30 MiB" "   1.3 MiB"
 [4,] "   1.2285433 GiB" "   1.229 GiB" "   1.23 GiB" "   1.2 GiB"
 [5,] "   1.4945944 TiB" "   1.495 TiB" "   1.49 TiB" "   1.5 TiB"
 [6,] "   1.3000707 PiB" "   1.300 PiB" "   1.30 PiB" "   1.3 PiB"
 [7,] "   1.3716001 EiB" "   1.372 EiB" "   1.37 EiB" "   1.4 EiB"
 [8,] "   1.2632150 ZiB" "   1.263 ZiB" "   1.26 ZiB" "   1.3 ZiB"
 [9,] "   1.3060808 YiB" "   1.306 YiB" "   1.31 YiB" "   1.3 YiB"
[10,] "1373.6975294 YiB" "1373.698 YiB" "1373.70 YiB" "1373.7 YiB"
      [,9]             [,10]        [,11]       [,12]     
 [1,] "   1.5000000 B" "   1.500 B" "   1.50 B" "   1.5 B"
 [2,] "   1.2232984 K" "   1.223 K" "   1.22 K" "   1.2 K"
 [3,] "   1.2988465 M" "   1.299 M" "   1.30 M" "   1.3 M"
 [4,] "   1.2285433 G" "   1.229 G" "   1.23 G" "   1.2 G"
 [5,] "   1.4945944 T" "   1.495 T" "   1.49 T" "   1.5 T"
 [6,] "   1.3000707 P" "   1.300 P" "   1.30 P" "   1.3 P"
 [7,] "   1.3716001 E" "   1.372 E" "   1.37 E" "   1.4 E"
 [8,] "   1.2632150 Z" "   1.263 Z" "   1.26 Z" "   1.3 Z"
 [9,] "   1.3060808 Y" "   1.306 Y" "   1.31 Y" "   1.3 Y"
[10,] "1373.6975294 Y" "1373.698 Y" "1373.70 Y" "1373.7 Y"
> 
> # Single unit, specify width
> cbind(humanReadable(x=SI1,  units="GB",  standard="SI",   width=7),
+       humanReadable(x=SI1,  units="GB",  standard="SI",   width=5),
+       humanReadable(x=SI1,  units="GB",  standard="SI",   width=3),
+       humanReadable(x=IEC1, units="GiB", standard="IEC",  width=7),
+       humanReadable(x=IEC1, units="GiB", standard="IEC",  width=5),
+       humanReadable(x=IEC1, units="GiB", standard="IEC",  width=3),
+       humanReadable(x=IEC1, units="G",   standard="Unix", width=7),
+       humanReadable(x=IEC1, units="G",   standard="Unix", width=5),
+       humanReadable(x=IEC1, units="G",   standard="Unix", width=3)
+       )
      [,1]       [,2]       [,3]       [,4]        [,5]        [,6]       
 [1,] "5e-10 GB" "5e-10 GB" "5e-10 GB" "5e-10 GiB" "5e-10 GiB" "5e-10 GiB"
 [2,] "7e-07 GB" "7e-07 GB" "7e-07 GB" "7e-07 GiB" "7e-07 GiB" "7e-07 GiB"
 [3,] "7e-04 GB" "7e-04 GB" "7e-04 GB" "8e-04 GiB" "8e-04 GiB" "8e-04 GiB"
 [4,] "4e-01 GB" "4e-01 GB" "4e-01 GB" "7e-01 GiB" "7e-01 GiB" "7e-01 GiB"
 [5,] "7e+02 GB" "7e+02 GB" "7e+02 GB" "7e+02 GiB" "7e+02 GiB" "7e+02 GiB"
 [6,] "7e+05 GB" "7e+05 GB" "7e+05 GB" "4e+05 GiB" "4e+05 GiB" "4e+05 GiB"
 [7,] "8e+08 GB" "8e+08 GB" "8e+08 GB" "6e+08 GiB" "6e+08 GiB" "6e+08 GiB"
 [8,] "7e+11 GB" "7e+11 GB" "7e+11 GB" "8e+11 GiB" "8e+11 GiB" "8e+11 GiB"
 [9,] "4e+14 GB" "4e+14 GB" "4e+14 GB" "8e+14 GiB" "8e+14 GiB" "8e+14 GiB"
[10,] "7e+17 GB" "7e+17 GB" "7e+17 GB" "9e+17 GiB" "9e+17 GiB" "9e+17 GiB"
      [,7]      [,8]      [,9]     
 [1,] "5e-10 G" "5e-10 G" "5e-10 G"
 [2,] "7e-07 G" "7e-07 G" "7e-07 G"
 [3,] "8e-04 G" "8e-04 G" "8e-04 G"
 [4,] "7e-01 G" "7e-01 G" "7e-01 G"
 [5,] "7e+02 G" "7e+02 G" "7e+02 G"
 [6,] "4e+05 G" "4e+05 G" "4e+05 G"
 [7,] "6e+08 G" "6e+08 G" "6e+08 G"
 [8,] "8e+11 G" "8e+11 G" "8e+11 G"
 [9,] "8e+14 G" "8e+14 G" "8e+14 G"
[10,] "9e+17 G" "9e+17 G" "9e+17 G"
> 
> # Single unit, specify digits
> cbind(humanReadable(x=SI1, units="GB", standard="SI", width=NULL, digits=7),
+       humanReadable(x=SI1, units="GB", standard="SI", width=NULL, digits=3),
+       humanReadable(x=SI1, units="GB", standard="SI", width=NULL, digits=2),
+       humanReadable(x=SI1, units="GB", standard="SI", width=NULL, digits=1),
+       humanReadable(x=IEC1, units="GiB", standard="IEC", width=NULL, digits=7),
+       humanReadable(x=IEC1, units="GiB", standard="IEC", width=NULL, digits=3),
+       humanReadable(x=IEC1, units="GiB", standard="IEC", width=NULL, digits=2),
+       humanReadable(x=IEC1, units="GiB", standard="IEC", width=NULL, digits=1),
+       humanReadable(x=IEC1, units="G", standard="Unix", width=NULL, digits=7),
+       humanReadable(x=IEC1, units="G", standard="Unix", width=NULL, digits=3),
+       humanReadable(x=IEC1, units="G", standard="Unix", width=NULL, digits=2),
+       humanReadable(x=IEC1, units="G", standard="Unix", width=NULL, digits=1)
+       )
      [,1]              [,2]          [,3]         [,4]      
 [1,] "5.000000e-10 GB" "5.00e-10 GB" "5.0e-10 GB" "5e-10 GB"
 [2,] "7.414207e-07 GB" "7.41e-07 GB" "7.4e-07 GB" "7e-07 GB"
 [3,] "7.460970e-04 GB" "7.46e-04 GB" "7.5e-04 GB" "7e-04 GB"
 [4,] "3.990084e-01 GB" "3.99e-01 GB" "4.0e-01 GB" "4e-01 GB"
 [5,] "7.334410e+02 GB" "7.33e+02 GB" "7.3e+02 GB" "7e+02 GB"
 [6,] "6.745084e+05 GB" "6.75e+05 GB" "6.7e+05 GB" "7e+05 GB"
 [7,] "7.885941e+08 GB" "7.89e+08 GB" "7.9e+08 GB" "8e+08 GB"
 [8,] "7.496193e+11 GB" "7.50e+11 GB" "7.5e+11 GB" "7e+11 GB"
 [9,] "3.579472e+14 GB" "3.58e+14 GB" "3.6e+14 GB" "4e+14 GB"
[10,] "7.498742e+17 GB" "7.50e+17 GB" "7.5e+17 GB" "7e+17 GB"
      [,5]               [,6]           [,7]          [,8]       
 [1,] "4.656613e-10 GiB" "4.66e-10 GiB" "4.7e-10 GiB" "5e-10 GiB"
 [2,] "7.237764e-07 GiB" "7.24e-07 GiB" "7.2e-07 GiB" "7e-07 GiB"
 [3,] "7.979097e-04 GiB" "7.98e-04 GiB" "8.0e-04 GiB" "8e-04 GiB"
 [4,] "6.742969e-01 GiB" "6.74e-01 GiB" "6.7e-01 GiB" "7e-01 GiB"
 [5,] "7.149879e+02 GiB" "7.15e+02 GiB" "7.1e+02 GiB" "7e+02 GiB"
 [6,] "4.269769e+05 GiB" "4.27e+05 GiB" "4.3e+05 GiB" "4e+05 GiB"
 [7,] "6.355649e+08 GiB" "6.36e+08 GiB" "6.4e+08 GiB" "6e+08 GiB"
 [8,] "7.956378e+11 GiB" "7.96e+11 GiB" "8.0e+11 GiB" "8e+11 GiB"
 [9,] "7.665900e+14 GiB" "7.67e+14 GiB" "7.7e+14 GiB" "8e+14 GiB"
[10,] "8.561693e+17 GiB" "8.56e+17 GiB" "8.6e+17 GiB" "9e+17 GiB"
      [,9]             [,10]        [,11]       [,12]    
 [1,] "4.656613e-10 G" "4.66e-10 G" "4.7e-10 G" "5e-10 G"
 [2,] "7.237764e-07 G" "7.24e-07 G" "7.2e-07 G" "7e-07 G"
 [3,] "7.979097e-04 G" "7.98e-04 G" "8.0e-04 G" "8e-04 G"
 [4,] "6.742969e-01 G" "6.74e-01 G" "6.7e-01 G" "7e-01 G"
 [5,] "7.149879e+02 G" "7.15e+02 G" "7.1e+02 G" "7e+02 G"
 [6,] "4.269769e+05 G" "4.27e+05 G" "4.3e+05 G" "4e+05 G"
 [7,] "6.355649e+08 G" "6.36e+08 G" "6.4e+08 G" "6e+08 G"
 [8,] "7.956378e+11 G" "7.96e+11 G" "8.0e+11 G" "8e+11 G"
 [9,] "7.665900e+14 G" "7.67e+14 G" "7.7e+14 G" "8e+14 G"
[10,] "8.561693e+17 G" "8.56e+17 G" "8.6e+17 G" "9e+17 G"
> 
> 
> stopifnot( is.object_sizes(as.object_sizes( 2^(1:30) ) ) )
> stopifnot( format(as.object_sizes(124)) == "124 bytes")
> stopifnot( format(as.object_sizes(124e8), units="auto") == "11.5 GiB")
> stopifnot( format(as.object_sizes(124e8), humanReadable=TRUE) == "11.5 GiB")
> stopifnot( format(as.object_sizes(124e8), units="bytes") == "1.24e+10 bytes")
> 
> tools::assertError( as.object_sizes(-1) )
> tools::assertError( as.object_sizes('a') )
> tools::assertError( as.object_sizes(list()) )
> tools::assertError( as.object_sizes(NULL) )
> tools::assertError( as.object_sizes(0+1i) )
> 
> stopifnot( format(as.object_sizes(1e40)               ) == "1e+40 bytes"     )
> stopifnot( format(as.object_sizes(1e40), units="auto" ) == "8.271806e+15 YiB")
> stopifnot( format(as.object_sizes(1e40), units="bytes") == "1e+40 bytes"     )
> stopifnot( format(as.object_sizes(1e40), humanReadable=TRUE) == "8.271806e+15 YiB")
> stopifnot( format(as.object_sizes(1e40), humanReadable=FALSE) ==  "1e+40 bytes")
> 
> options(humanReadable=TRUE)
> stopifnot( format(as.object_sizes(1e40) ) == "8.271806e+15 YiB")
> options(humanReadable=FALSE)
> 
> proc.time()
   user  system elapsed 
  0.427   0.050   0.472 
